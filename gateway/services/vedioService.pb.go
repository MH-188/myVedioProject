// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: vedioService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//视频流接口
type VedioStreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastestTime int64 `protobuf:"varint,1,opt,name=Lastest_time,json=LastestTime,proto3" json:"Lastest_time,omitempty"` //最新投稿时间戳，不填为当前时间
	UId         int64 `protobuf:"varint,2,opt,name=UId,proto3" json:"UId,omitempty"`                                    //用户登录状态下的id
}

func (x *VedioStreamReq) Reset() {
	*x = VedioStreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VedioStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VedioStreamReq) ProtoMessage() {}

func (x *VedioStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VedioStreamReq.ProtoReflect.Descriptor instead.
func (*VedioStreamReq) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{0}
}

func (x *VedioStreamReq) GetLastestTime() int64 {
	if x != nil {
		return x.LastestTime
	}
	return 0
}

func (x *VedioStreamReq) GetUId() int64 {
	if x != nil {
		return x.UId
	}
	return 0
}

type VedioStreamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64    `protobuf:"varint,1,opt,name=Status_code,json=StatusCode,proto3" json:"Status_code,omitempty"`
	StatusMsg  string   `protobuf:"bytes,2,opt,name=Status_msg,json=StatusMsg,proto3" json:"Status_msg,omitempty"`
	NextTime   int64    `protobuf:"varint,3,opt,name=NextTime,proto3" json:"NextTime,omitempty"`
	VideoList  []*Vedio `protobuf:"bytes,4,rep,name=VideoList,proto3" json:"VideoList,omitempty"`
}

func (x *VedioStreamResp) Reset() {
	*x = VedioStreamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VedioStreamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VedioStreamResp) ProtoMessage() {}

func (x *VedioStreamResp) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VedioStreamResp.ProtoReflect.Descriptor instead.
func (*VedioStreamResp) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{1}
}

func (x *VedioStreamResp) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *VedioStreamResp) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *VedioStreamResp) GetNextTime() int64 {
	if x != nil {
		return x.NextTime
	}
	return 0
}

func (x *VedioStreamResp) GetVideoList() []*Vedio {
	if x != nil {
		return x.VideoList
	}
	return nil
}

//投稿接口
type PublishReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	UId      int64  `protobuf:"varint,2,opt,name=UId,proto3" json:"UId,omitempty"`
	Title    string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	FileName string `protobuf:"bytes,4,opt,name=File_name,json=FileName,proto3" json:"File_name,omitempty"`
}

func (x *PublishReq) Reset() {
	*x = PublishReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishReq) ProtoMessage() {}

func (x *PublishReq) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishReq.ProtoReflect.Descriptor instead.
func (*PublishReq) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{2}
}

func (x *PublishReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PublishReq) GetUId() int64 {
	if x != nil {
		return x.UId
	}
	return 0
}

func (x *PublishReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PublishReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type PublishResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64  `protobuf:"varint,1,opt,name=Status_code,json=StatusCode,proto3" json:"Status_code,omitempty"`
	StatusMsg  string `protobuf:"bytes,2,opt,name=Status_msg,json=StatusMsg,proto3" json:"Status_msg,omitempty"`
}

func (x *PublishResp) Reset() {
	*x = PublishResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResp) ProtoMessage() {}

func (x *PublishResp) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResp.ProtoReflect.Descriptor instead.
func (*PublishResp) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{3}
}

func (x *PublishResp) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *PublishResp) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

//获取发布列表
type PublishListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UId int64 `protobuf:"varint,1,opt,name=UId,proto3" json:"UId,omitempty"` //被查看用户的ID
}

func (x *PublishListReq) Reset() {
	*x = PublishListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishListReq) ProtoMessage() {}

func (x *PublishListReq) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishListReq.ProtoReflect.Descriptor instead.
func (*PublishListReq) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{4}
}

func (x *PublishListReq) GetUId() int64 {
	if x != nil {
		return x.UId
	}
	return 0
}

type PublishListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64    `protobuf:"varint,1,opt,name=Status_code,json=StatusCode,proto3" json:"Status_code,omitempty"`
	StatusMsg  string   `protobuf:"bytes,2,opt,name=Status_msg,json=StatusMsg,proto3" json:"Status_msg,omitempty"`
	VideoList  []*Vedio `protobuf:"bytes,3,rep,name=VideoList,proto3" json:"VideoList,omitempty"`
}

func (x *PublishListResp) Reset() {
	*x = PublishListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishListResp) ProtoMessage() {}

func (x *PublishListResp) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishListResp.ProtoReflect.Descriptor instead.
func (*PublishListResp) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{5}
}

func (x *PublishListResp) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *PublishListResp) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *PublishListResp) GetVideoList() []*Vedio {
	if x != nil {
		return x.VideoList
	}
	return nil
}

//更改点赞数量
type FavoriteCountChangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UId        int64 `protobuf:"varint,1,opt,name=UId,proto3" json:"UId,omitempty"`
	VId        int64 `protobuf:"varint,2,opt,name=VId,proto3" json:"VId,omitempty"`
	IsFavorite bool  `protobuf:"varint,3,opt,name=Is_favorite,json=IsFavorite,proto3" json:"Is_favorite,omitempty"`
}

func (x *FavoriteCountChangeReq) Reset() {
	*x = FavoriteCountChangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteCountChangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteCountChangeReq) ProtoMessage() {}

func (x *FavoriteCountChangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteCountChangeReq.ProtoReflect.Descriptor instead.
func (*FavoriteCountChangeReq) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{6}
}

func (x *FavoriteCountChangeReq) GetUId() int64 {
	if x != nil {
		return x.UId
	}
	return 0
}

func (x *FavoriteCountChangeReq) GetVId() int64 {
	if x != nil {
		return x.VId
	}
	return 0
}

func (x *FavoriteCountChangeReq) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type FavoriteChangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64  `protobuf:"varint,1,opt,name=Status_code,json=StatusCode,proto3" json:"Status_code,omitempty"`
	StatusMsg  string `protobuf:"bytes,2,opt,name=Status_msg,json=StatusMsg,proto3" json:"Status_msg,omitempty"`
}

func (x *FavoriteChangeResp) Reset() {
	*x = FavoriteChangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FavoriteChangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteChangeResp) ProtoMessage() {}

func (x *FavoriteChangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteChangeResp.ProtoReflect.Descriptor instead.
func (*FavoriteChangeResp) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{7}
}

func (x *FavoriteChangeResp) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *FavoriteChangeResp) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

// 更改评论数量
type CommentCountChangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UId        int64 `protobuf:"varint,1,opt,name=UId,proto3" json:"UId,omitempty"`
	VId        int64 `protobuf:"varint,2,opt,name=VId,proto3" json:"VId,omitempty"`
	Is_Comment bool  `protobuf:"varint,3,opt,name=Is_Comment,json=IsComment,proto3" json:"Is_Comment,omitempty"` //修改评论数量
}

func (x *CommentCountChangeReq) Reset() {
	*x = CommentCountChangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentCountChangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentCountChangeReq) ProtoMessage() {}

func (x *CommentCountChangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentCountChangeReq.ProtoReflect.Descriptor instead.
func (*CommentCountChangeReq) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{8}
}

func (x *CommentCountChangeReq) GetUId() int64 {
	if x != nil {
		return x.UId
	}
	return 0
}

func (x *CommentCountChangeReq) GetVId() int64 {
	if x != nil {
		return x.VId
	}
	return 0
}

func (x *CommentCountChangeReq) GetIs_Comment() bool {
	if x != nil {
		return x.Is_Comment
	}
	return false
}

type CommentCountChangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64  `protobuf:"varint,1,opt,name=Status_code,json=StatusCode,proto3" json:"Status_code,omitempty"`
	StatusMsg  string `protobuf:"bytes,2,opt,name=Status_msg,json=StatusMsg,proto3" json:"Status_msg,omitempty"`
}

func (x *CommentCountChangeResp) Reset() {
	*x = CommentCountChangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vedioService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentCountChangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentCountChangeResp) ProtoMessage() {}

func (x *CommentCountChangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_vedioService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentCountChangeResp.ProtoReflect.Descriptor instead.
func (*CommentCountChangeResp) Descriptor() ([]byte, []int) {
	return file_vedioService_proto_rawDescGZIP(), []int{9}
}

func (x *CommentCountChangeResp) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CommentCountChangeResp) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

var File_vedioService_proto protoreflect.FileDescriptor

var file_vedioService_proto_rawDesc = []byte{
	0x0a, 0x12, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11,
	0x76, 0x65, 0x64, 0x69, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x45, 0x0a, 0x0e, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x65,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x0f, 0x56, 0x65, 0x64,
	0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x4e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x52, 0x09, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d,
	0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x22, 0x22, 0x0a,
	0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49,
	0x64, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x52, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x16, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x56, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x56,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x49, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x12, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x22, 0x5a, 0x0a, 0x15, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x55, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x56, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x49, 0x73, 0x5f, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x32,
	0x80, 0x03, 0x0a, 0x0c, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x42, 0x0a, 0x0b, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x64, 0x69, 0x6f,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x56,
	0x65, 0x64, 0x69, 0x6f, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x42, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x13, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x12,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vedioService_proto_rawDescOnce sync.Once
	file_vedioService_proto_rawDescData = file_vedioService_proto_rawDesc
)

func file_vedioService_proto_rawDescGZIP() []byte {
	file_vedioService_proto_rawDescOnce.Do(func() {
		file_vedioService_proto_rawDescData = protoimpl.X.CompressGZIP(file_vedioService_proto_rawDescData)
	})
	return file_vedioService_proto_rawDescData
}

var file_vedioService_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_vedioService_proto_goTypes = []interface{}{
	(*VedioStreamReq)(nil),         // 0: services.VedioStreamReq
	(*VedioStreamResp)(nil),        // 1: services.VedioStreamResp
	(*PublishReq)(nil),             // 2: services.PublishReq
	(*PublishResp)(nil),            // 3: services.PublishResp
	(*PublishListReq)(nil),         // 4: services.PublishListReq
	(*PublishListResp)(nil),        // 5: services.PublishListResp
	(*FavoriteCountChangeReq)(nil), // 6: services.FavoriteCountChangeReq
	(*FavoriteChangeResp)(nil),     // 7: services.FavoriteChangeResp
	(*CommentCountChangeReq)(nil),  // 8: services.CommentCountChangeReq
	(*CommentCountChangeResp)(nil), // 9: services.CommentCountChangeResp
	(*Vedio)(nil),                  // 10: services.Vedio
}
var file_vedioService_proto_depIdxs = []int32{
	10, // 0: services.VedioStreamResp.VideoList:type_name -> services.Vedio
	10, // 1: services.PublishListResp.VideoList:type_name -> services.Vedio
	0,  // 2: services.VedioService.VedioStream:input_type -> services.VedioStreamReq
	2,  // 3: services.VedioService.PublishVedio:input_type -> services.PublishReq
	4,  // 4: services.VedioService.PublishList:input_type -> services.PublishListReq
	6,  // 5: services.VedioService.FavoriteCountChange:input_type -> services.FavoriteCountChangeReq
	6,  // 6: services.VedioService.CommentCountChange:input_type -> services.FavoriteCountChangeReq
	1,  // 7: services.VedioService.VedioStream:output_type -> services.VedioStreamResp
	3,  // 8: services.VedioService.PublishVedio:output_type -> services.PublishResp
	5,  // 9: services.VedioService.PublishList:output_type -> services.PublishListResp
	7,  // 10: services.VedioService.FavoriteCountChange:output_type -> services.FavoriteChangeResp
	7,  // 11: services.VedioService.CommentCountChange:output_type -> services.FavoriteChangeResp
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_vedioService_proto_init() }
func file_vedioService_proto_init() {
	if File_vedioService_proto != nil {
		return
	}
	file_vedioModels_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vedioService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VedioStreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vedioService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VedioStreamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vedioService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vedioService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vedioService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vedioService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vedioService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteCountChangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vedioService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FavoriteChangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vedioService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentCountChangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vedioService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentCountChangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vedioService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vedioService_proto_goTypes,
		DependencyIndexes: file_vedioService_proto_depIdxs,
		MessageInfos:      file_vedioService_proto_msgTypes,
	}.Build()
	File_vedioService_proto = out.File
	file_vedioService_proto_rawDesc = nil
	file_vedioService_proto_goTypes = nil
	file_vedioService_proto_depIdxs = nil
}
